name: CI

on:
  push:
    branches: [master]
    tags:
      - 'v*'
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    name: Build
    steps:
      - uses: actions/checkout@main
      - uses: actions/setup-node@main
        with:
          node-version: 20
      - uses: actions/cache@main
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: |
            ~/.npm
            ./node_modules
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package.json') }}
          restore-keys: ${{ runner.os }}-npm-${{ hashFiles('**/package.json') }}
      - name: Npm install
        run: npm install && npm ci
      - name: Build
        run: npm run build
      - name: Pack
        run: |
          npm pack
          mv html2canvas-*.tgz html2canvas.tgz
          tar --list --verbose --file=html2canvas.tgz
      - name: Upload npm pack
        uses: actions/upload-artifact@main
        with:
          name: npm
          path: html2canvas.tgz
          if-no-files-found: error
      - name: Upload dist
        uses: actions/upload-artifact@main
        with:
          name: dist
          path: dist
          if-no-files-found: error
      - name: Upload build
        uses: actions/upload-artifact@main
        with:
          name: build
          path: build
          if-no-files-found: error

  test:
    runs-on: ubuntu-latest
    name: Test
    steps:
      - uses: actions/checkout@main
      - uses: actions/setup-node@main
        with:
          node-version: 20
      - name: Cache node modules
        uses: actions/cache@main
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: |
            ~/.npm
            ./node_modules
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package.json') }}
          restore-keys: ${{ runner.os }}-npm-${{ hashFiles('**/package.json') }}
      - name: Npm install
        run: npm install && npm ci
      - name: File tests
        run: npm run lint
      - name: Unit tests
        run: npm run unittest
  browser-test:
    strategy:
      fail-fast: false
      matrix:
        config:
          - os: ubuntu-latest
            name: Linux Firefox Stable
            targetBrowser: Firefox_Stable
          - os: ubuntu-latest
            name: Linux Chrome Stable
            targetBrowser: Chrome_Stable
          - os: macos-latest
            name: OSX Safari Stable
            targetBrowser: Safari_Stable
    runs-on: ${{ matrix.config.os }}
    name: ${{ matrix.config.name }}
    env:
      TARGET_BROWSER: ${{ matrix.config.targetBrowser }}
    needs: build
    steps:
      - name: Setup headless display
        uses: pyvista/setup-headless-display-action@main
      - uses: actions/checkout@main
      - uses: actions/setup-node@main
        with:
          node-version: 20
      - name: Cache node modules
        uses: actions/cache@main
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: |
            ~/.npm
            ./node_modules
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package.json') }}
          restore-keys: ${{ runner.os }}-npm-${{ hashFiles('**/package.json') }}
      - name: Download library
        uses: actions/download-artifact@main
        with:
          name: dist
          path: dist
      - name: Download test-runner
        uses: actions/download-artifact@main
        with:
          name: build
          path: build
      - name: Npm install
        run: npm install && npm ci
      - name: xcode selection
        if: ${{ matrix.config.xcode != '' }}
        run: sudo xcode-select -s "${{ matrix.config.xcode }}"
      - name: Run browser tests
        run: npm run karma

      - name: Upload screenshots
        uses: actions/upload-artifact@main
        with:
          name: reftest-${{runner.os}}-${{ matrix.config.targetBrowser }}
          path: tmp/reftests
          if-no-files-found: error
  docs:
    runs-on: ubuntu-latest
    name: Build docs
    needs: browser-test
    steps:
      - uses: actions/checkout@main
      - uses: actions/setup-node@main
        with:
          node-version: 20
      - name: Cache node modules
        uses: actions/cache@main
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: |
            ~/.npm
            ./node_modules
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package.json') }}
          restore-keys: ${{ runner.os }}-npm-${{ hashFiles('**/package.json') }}
      - name: Npm install
        run: npm install && npm ci
      - name: Download library
        uses: actions/download-artifact@main
        with:
          name: dist
          path: www/static/dist
      - name: Download test results
        uses: actions/download-artifact@main
        with:
          name: reftest-Linux-Chrome_Stable
          path: www/static/results
      - name: Copy reftests to docs website
        run: cp -R tests/reftests www/static/tests/reftests && cp -R tests/assets www/static/tests/assets && cp tests/test.js www/static/tests/test.js
      - name: Create reftest result index
        run: npm run build:reftest-result-list www/static/results/metadata www/src/results.json
      - name: Create reftest previewer
        run: npm run build:reftest-preview
      - name: Clean metadata folder
        run: rm -rf www/static/results/metadata
      - name: Build docs
        run: npm run build && cd www && npm install && npm run build && cd ..
      - name: Upload docs
        uses: actions/upload-artifact@main
        with:
          name: docs
          path: www/public
          if-no-files-found: error
  publish-docs:
    runs-on: ubuntu-latest
    name: Publish Docs
    if: ${{ github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags/v') }}
    needs: docs
    steps:
      - uses: actions/checkout@main
        with:
          persist-credentials: false
      - name: Download docs
        uses: actions/download-artifact@main
        with:
          name: docs
          path: docs
      - name: Publish docs
        uses: JamesIves/github-pages-deploy-action@3.7.1
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BRANCH: gh-pages
          FOLDER: docs
          SINGLE_COMMIT: true
          CLEAN: true
